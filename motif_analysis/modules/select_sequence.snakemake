# This script takes sequence data and prediction in HDF5
# and output selected sequence set for downstream analysis

# def get_all_seq(wildcards):
#     out = []
#     for data in config[wildcards.dataname]:
#         out.append('data/{dataname}.{data}/selected_positive.hdf5'.format(dataname=wildcards.dataname, data=data))
#         out.append('data/{dataname}.{data}/selected_negative.hdf5'.format(dataname=wildcards.dataname, data=data))
#     return out
#
# rule all:
#     input:
#         lambda wildcards: get_all_seq(wildcards)

rule select_sequence:
    input:
        ypred = lambda wildcards: config[wildcards.dataname][wildcards.data]['ypred']['path'],
        y = lambda wildcards: config[wildcards.dataname][wildcards.data]['y']['path'],
        x = lambda wildcards: config[wildcards.dataname][wildcards.data]['x']['path']
    output:
        p = 'data/{dataname}.{data}/selected_positive.hdf5',
        n = 'data/{dataname}.{data}/selected_negative.hdf5'
    params:
        ypred = lambda wildcards: config[wildcards.dataname][wildcards.data]['ypred']['name'],
        y = lambda wildcards: config[wildcards.dataname][wildcards.data]['y']['name'],
        x = lambda wildcards: config[wildcards.dataname][wildcards.data]['x']['name'],
        y_label_idx = lambda wildcards: config[wildcards.dataname][wildcards.data]['y']['label_idx'],
        yp_label_idx = lambda wildcards: config[wildcards.dataname][wildcards.data]['ypred']['label_idx'],
        num = lambda wildcards: config[wildcards.dataname][wildcards.data]['extract_num'],
        ypdouble = lambda wildcards: config[wildcards.dataname][wildcards.data]['ypred']['double'],
        ydouble = lambda wildcards: config[wildcards.dataname][wildcards.data]['y']['double'],
        ypremove = lambda wildcards: config[wildcards.dataname][wildcards.data]['ypred']['remove'],
        yremove = lambda wildcards: config[wildcards.dataname][wildcards.data]['y']['remove']
    log:
        'logs/{dataname}.{data}/select_sequence.log'
    shell:
        'python scripts/select_sequence.py --ypred {input.ypred} \
        --y {input.y} \
        --x {input.x} \
        --ypred_name {params.ypred} \
        --y_name {params.y} \
        --x_name {params.x} \
        --y_label_idx {params.y_label_idx} \
        --yp_label_idx {params.yp_label_idx} \
        --num {params.num} \
        --out_pos {output.p} \
        --out_neg {output.n} \
        --ydouble {params.ydouble} \
        --ypdouble {params.ypdouble} \
        --yremove {params.yremove} \
        --ypremove {params.ypremove}
        2> {log}'
