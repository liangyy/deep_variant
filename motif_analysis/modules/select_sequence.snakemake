# This script takes sequence data and prediction in HDF5
# and output selected sequence set for downstream analysis

rule select_sequence:
    input:
        ypred = lambda wildcards: config['data'][wildcards.data]['data_ypred']['path'],
        y = lambda wildcards: config['data'][wildcards.data]['data_y']['path'],
        x = lambda wildcards: config['data'][wildcards.data]['data_x']['path']
    output:
        p = 'data/{data}/selected_positive.hdf5',
        n = 'data/{data}/selected_negative.hdf5'
    params:
        ypred = lambda wildcards: config['data'][wildcards.data]['data_ypred']['name'],
        y = lambda wildcards: config['data'][wildcards.data]['data_y']['name'],
        x = lambda wildcards: config['data'][wildcards.data]['data_x']['name'],
        label_idx = lambda wildcards: config['data'][wildcards.data]['label_num'],
        num = lambda wildcards: config['data'][wildcards.data]['extract_num']
    log:
        'logs/{data}/select_sequence.log'
    shell:
        'python scripts/select_sequence.py --ypred {input.ypred} \
        --y {input.y} \
        --x {input.x} \
        --ypred_name {params.ypred} \
        --y_name {params.y} \
        --x_name {params.x} \
        --label_idx {params.label_idx} \
        --num {params.num} \
        2> {log}'
