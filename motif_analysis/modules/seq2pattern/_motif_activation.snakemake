# This module takes sequences and model as input and generate feather file containing the activation of first convolutional layer
# For each sequence, the spatial information will be collapsed by taking the maximum value

rule get_pattern_pos:
    input:
        p = 'data/{data}/selected_positive.hdf5',
        model = config['model']['path']
    output:
        op = 'pattern/{model}/{data}/motif_activation/pattern_positive.feather'.format(data='{data}', model=config['model']['name'])
    params:
        idx = config['model']['first_layer_idx']
    shell:
        'python scripts/motif_activation.py --model {input.model} \
        --input {input.p} \
        --output {output.op} \
        --idx {params.idx}'

rule get_pattern_neg:
    input:
        n = 'data/{data}/selected_negative.hdf5',
        model = config['model']['path']
    output:
        on = 'pattern/{model}/{data}/motif_activation/pattern_negative.feather'.format(data='{data}', model=config['model']['name'])
    params:
        idx = config['model']['first_layer_idx']
    shell:
        'python scripts/motif_activation.py --model {input.model} \
        --input {input.n} \
        --output {output.on} \
        --idx {params.idx}'
