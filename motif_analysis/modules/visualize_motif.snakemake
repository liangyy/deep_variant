# This section motif_visualization motif of model using various methods
# The output is at [model_name]/visualization
# Now we only focus on the first layer (namely motif)
rule hdf52feather:
    input:
        model = config['model']['path']
    output:
        temp([ 'pattern/{model}/motif_visualization/Motif_{i}.feather'.format(model=config['model']['name'], i=i) for i in range(config['model']['nmotifs']) ])
    params:
        layer_idx = config['model']['motif_layer_idx'],
        nmotifs = config['model']['nmotifs']
    run:
        import feather
        import pandas as pd
        from keras.models import load_model
        model = load_model(input.model)
        motifs = model.layers[params.layer_idx].get_weights()[0]
        for i in range(params.nmotifs):
            motif = motifs[:,:,i].T
            total_table = pd.DataFrame(motif, columns=[ 'Pos.' + str(i) for i in range(motif.shape[1]) ])
            total_table = total_table.copy()
            feather.write_dataframe(total_table, output[i])

rule visual_rmd:
    # input:
    #     [ 'pattern/{model}/motif_visualization/Motif_{i}.feather'.format(model=config['model']['name'], i=i) for i in range(config['model']['nmotifs']) ]
    output:
        rmd = temp('report/{model}/motif_visualization/draw_list.Rmd')
    params:
        model = config['model']['name'],
        envir = '../../../',
        nmotifs = config['model']['nmotifs']
    run:
        rmd = '''---
title: "Motif Analysis - visualization motifs"
output:
html_document:
    number_sections: true
    toc: true
    toc_depth: 3
date: "`r format(Sys.time(), '%B %d, %Y')`"
---

```{{r setup}}
knitr::opts_knit$set(root.dir = '{envir}')
```

Here the order of bases is 'A', 'G', 'C', 'T'.

```{{r, echo=FALSE, warning=FALSE}}
source('scripts/my_r.R')
library(feather)
library(ggplot2)
library(reshape2)
library(bsselectR)
path <- 'pattern/{model}/motif_visualization/'
info <- c('{model}', 'motif_visualization')
plots <- list()
for(i in 0 : ({nmotifs} - 1)){{
    p <- plot_motif_visual(filename = paste(path, '/Motif_', i, '.feather', sep = ''), i)
    save_plot(info, p, paste('Motif', i, sep = '.'), 'plots', plots)
}}
bsselect(plots, type = "img", selected = names(plots)[1],
         live_search = TRUE, show_tick = TRUE, height = 10)
```
'''.format(envir=params.envir, model=params.model, nmotifs=params.nmotifs)
        o = open(output.rmd, 'w')
        o.write(rmd)
        o.close()

rule visual_html:
    input:
        rmd = 'report/{model}/motif_visualization/draw_list.Rmd',
        files = [ 'pattern/{model}/motif_visualization/Motif_{i}.feather'.format(model=config['model']['name'], i=i) for i in range(config['model']['nmotifs']) ]
    output:
        'report/{model}/motif_visualization/draw_list.html'
    shell:
        '''Rscript -e "rmarkdown::render('./{input.rmd}')"'''
