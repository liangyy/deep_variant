# This module takes a bed file that contains the signal regions from NGS genomic
# experiment, i.e. ChIP-seq, DNase-seq, etc and outputs the random selected
# subregions of it (the length is user-defined).

def get_output(config):
    out = []
    for f in config.keys():
        for i in config[f]['nrepeat']:
            out.append('output/{name}_ws-{window_size}_repeat-{i}.fa'.format(name = f,
                window_size = config[f]['window_size'],
                i = i))

rule all:
    input:
        get_output(config)

rule bed2region:
    input:
        config[{wildcards.name}]['bed_path']
    output:
        'output/{name}_ws-{window_size}.region.txt'
    shell:
        'python scripts/bed2region.py --bed {input[0]} --window_size {wildcards.window_size} \
        --output {output[0]}'

rule extract_region:
    input:
        'output/{name}_ws-{window_size}.region.txt'
    params:
        nrg = lambda wildcards: config[wildcards.name]['nregion']
    output:
        'output/{name}_ws-{window_size}_repeat-{i}.fa'
    shell:
        'python scripts/extract_region.py --region {input[0]} --output {output[0]} --nregion {params.nrg}'
