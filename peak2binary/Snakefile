# This module takes a pair of peak files (negative and positive peaks) and construct the binary file (HDF5) ready for deep_variant framework together with labels
# CAUTIONS:
# 1. If the peak is too big (bigger than 1kb), it will be discarded
# 2. The 1kb region will be chosen where peak is centered
# 3. If the peak is close to the end of chromosome so that the region cannot be extended to 1kb, it will be discarded as well

rule all:
    input:
        'output/{dataname}/merged.hdf5'.format(dataname = config['dataname'])
rule extend_region:
    input:
        lambda wildcards: config[wildcards.dataname][wildcards.type]
    output:
        temp('output/{dataname}/{type}.extended.bed')
    shell:
        '''
        cat {input[0]} | awk -v OFS="\t" \'{{ \
            if( $4=="+" ) {{ \
                a=$3-$2; \
                s1=$2; \
                e1=$3; \
            }} \
            else if( $4=="-" ) {{ \
                a=$2-$3; \
                s1=$3; \
                e1=$2; \
            }} \
            else {{ \
                a=$3-$2; \
                s1=$2; \
                e1=$3; \
            }} \
            if( a<=1000 ) {{ \
                d=int((1000-a)/2); \
                d2=1000-a-d;
                s=s1-d; \
                e=e1+d2; \
                print $1,s,e; \
            }} \
        }}\' > {output[0]}
        '''

rule get_fasta:
    input:
        'output/{dataname}/{type}.extended.bed'
    output:
        temp('output/{dataname}/{type}.seq')
    params:
        genome = config['genome-assembly']
    shell:
        'bedtools getfasta -fi {params.genome} -bed {input[0]} -fo {output[0]} -name -tab'

rule seq2input:
    input:
        'output/{dataname}/{type}.seq'
    output:
        temp('output/{dataname}/temp-{type}.hdf5')
    shell:
        'python scripts/seq2input.py --seq_file {input[0]} --out_name {output[0]}'

rule add_label:
    input:
        'output/{dataname}/temp-positive.hdf5',
        'output/{dataname}/temp-negative.hdf5'
    output:
        'output/{dataname}/merged.hdf5'
    shell:
        'python scripts/merge.py --pos {input[0]} --neg {input[1]} --out {output[0]}'
